{"version":3,"file":"static/js/606.03b09fe1.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.styled.js","pages/RegisterPage/RegisterPage.jsx","../node_modules/@mui/icons-material/CheckOutlined.js","../node_modules/@mui/icons-material/CloseOutlined.js","../node_modules/@mui/icons-material/RemoveRedEyeOutlined.js","../node_modules/@mui/icons-material/VisibilityOffOutlined.js"],"sourcesContent":["import { Field } from 'formik';\nimport { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const RegisterFormEl = styled.form`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const RegisterFormTitle = styled.h1`\n  font-weight: 500;\n  font-size: 36px;\n  line-height: 1.36;\n  color: ${({ theme }) => theme.colors.black};\n  margin-bottom: 40px;\n\n  @media screen and (max-width: 767px) {\n    font-size: 24px;\n    line-height: 1.38;\n  }\n`;\n\nexport const RegisterFormUsernameContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormUsernameInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormEmailContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error }) => (error ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error }) => (error ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormEmailInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error }) => (error ? theme.colors.red : theme.colors.blue)};\n  border-radius: 40px;\n`;\n\nexport const RegisterFormInput = styled(Field)`\n  padding: 12px 0;\n  line-height: 1.5;\n  letter-spacing: 0.04em;\n\n  width: 100%;\n  height: 48px;\n  border: none;\n  outline: none;\n`;\n\nexport const ErrorIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.red};\n  }\n`;\n\nexport const ErrorMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const RegisterFormPasswordContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n\n  margin-bottom: ${({ error, secure }) => (error || secure ? '6px' : '32px')};\n\n  @media screen and (max-width: 767px) {\n    margin-bottom: ${({ error, secure }) => (error || secure ? '1px' : '24px')};\n  }\n`;\n\nexport const RegisterFormPasswordInputContainer = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 2px 16px;\n\n  border: 1px solid\n    ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blue};\n  border-radius: 40px;\n`;\n\nexport const PasswordIcon = styled.span`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n\nexport const EyeIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme, error, secure }) =>\n      error\n        ? theme.colors.red\n        : secure\n        ? theme.colors.green\n        : theme.colors.blue};\n  }\n`;\n\nexport const CheckMarkIcon = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n\n  & svg {\n    stroke: ${({ theme }) => theme.colors.green};\n  }\n`;\n\nexport const InfoMessage = styled.div`\n  padding-left: 16px;\n  margin-top: 4px;\n  color: ${({ theme }) => theme.colors.green};\n`;\n\nexport const RegisterErrorMessage = styled.div`\n  padding: 15px 16px 0 16px;\n  color: ${({ theme }) => theme.colors.red};\n`;\n\nexport const RegisterBtn = styled.button`\n  margin-top: 8px;\n  margin-bottom: 20px;\n  width: 100%;\n\n  padding: 10px 0 10px 0;\n\n  border-radius: 40px;\n\n  color: ${({ theme }) => theme.colors.blue};\n  background: #fff;\n  border: 1px solid #54adff;\n\n  font-weight: 600;\n  font-size: 20px;\n  line-height: 1.35;\n  letter-spacing: 0.04em;\n\n  transition: all 350ms ease-in;\n\n  @media screen and (max-width: 767px) {\n    margin-top: 41px;\n    margin-bottom: 24px;\n  }\n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background: ${({ theme }) => theme.colors.blue};\n    border: 1px solid transparent;\n  }\n`;\n\nexport const LoginText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.3;\n  letter-spacing: 0.04em;\n  color: ${({ theme }) => theme.colors.grey};\n`;\n\nexport const LoginLink = styled(Link)`\n  text-decoration-line: underline;\n  color: ${({ theme }) => theme.colors.blue};\n  display: inline;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport { register, login } from 'redux/Auth/AuthOperations';\n\nimport VisibilityOffOutlinedIcon from '@mui/icons-material/VisibilityOffOutlined';\nimport CloseOutlinedIcon from '@mui/icons-material/CloseOutlined';\nimport CheckOutlinedIcon from '@mui/icons-material/CheckOutlined';\nimport RemoveRedEyeOutlinedIcon from '@mui/icons-material/RemoveRedEyeOutlined';\n\nimport {\n  RegisterFormEl,\n  RegisterFormTitle,\n  RegisterFormUsernameContainer,\n  RegisterFormUsernameInputContainer,\n  RegisterFormEmailContainer,\n  RegisterFormEmailInputContainer,\n  RegisterFormInput,\n  RegisterFormPasswordContainer,\n  RegisterFormPasswordInputContainer,\n  ErrorMessage,\n  PasswordIcon,\n  RegisterBtn,\n  EyeIcon,\n  ErrorIcon,\n  CheckMarkIcon,\n  InfoMessage,\n  RegisterErrorMessage,\n  LoginText,\n  LoginLink,\n} from './RegisterForm.styled';\n\nconst initialValues = {\n  username: '',\n  email: '',\n  password: '',\n  confirmPassword: '',\n};\n\nconst fieldValidation = values => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = 'This field is required';\n  } else if (/^\\s+$/.test(values.username)) {\n    errors.username = 'Username cannot be empty';\n  }\n\n  if (!values.email) {\n    errors.email = 'This field is required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n    errors.email = 'Enter a valid Email';\n  }\n\n  if (!values.password) {\n    errors.password = 'This field is required';\n  } else if (values.password.length < 8) {\n    errors.password = 'Password must be at least 8 characters long';\n  }\n\n  if (!values.confirmPassword) {\n    errors.confirmPassword = 'This field is required';\n  } else if (values.confirmPassword.length < 8) {\n    errors.confirmPassword = 'Password must be at least 8 characters long';\n  } else if (values.password !== values.confirmPassword) {\n    errors.confirmPassword = 'Passwords do not match';\n  }\n\n  return errors;\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [emailAvailable, setEmailAvailable] = useState(true);\n\n  const togglePasswordVisibility = () => {\n    setShowPassword(prevState => !prevState);\n  };\n\n  const toggleConfirmPasswordVisibility = () => {\n    setShowConfirmPassword(prevState => !prevState);\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    if (loading) {\n      return;\n    }\n    localStorage.setItem('isNewRegistration', 'true');\n    setLoading(true);\n    const credentials = {\n      email: values.email,\n      password: values.password,\n      name: values.username,\n    };\n\n    try {\n      const response = await dispatch(register(credentials));\n      if (response.error) {\n        setEmailAvailable(false);\n      } else {\n        setEmailAvailable(true);\n        await dispatch(\n          login({ email: values.email, password: values.password })\n        );\n      }\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validate={fieldValidation}\n      validateOnChange={false}\n      onSubmit={handleSubmit}\n    >\n      {({\n        values,\n        errors,\n        setErrors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting,\n        resetForm,\n      }) => {\n        const isPasswordValid = values.password && values.password.length >= 8;\n        const handleFieldChange = e => {\n          const { name } = e.target;\n          setErrors({ ...errors, [name]: '' });\n          handleChange(e);\n        };\n\n        return (\n          <RegisterFormEl onSubmit={handleSubmit}>\n            <RegisterFormTitle>Registration</RegisterFormTitle>\n            <RegisterFormUsernameContainer\n              error={errors.username && touched.username}\n            >\n              <RegisterFormUsernameInputContainer\n                error={errors.username && touched.username}\n                style={{\n                  borderColor:\n                    errors.username && touched.username ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"username\"\n                  placeholder=\"Username\"\n                  value={values.username}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.username && touched.username && values.username && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, username: '' } });\n                    }}\n                  >\n                    <CloseOutlinedIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormUsernameInputContainer>\n              {errors.username && touched.username && (\n                <ErrorMessage name=\"username\">{errors.username}</ErrorMessage>\n              )}\n            </RegisterFormUsernameContainer>\n\n            <RegisterFormEmailContainer error={errors.email && touched.email}>\n              <RegisterFormEmailInputContainer\n                error={errors.email && touched.email}\n                style={{\n                  borderColor:\n                    errors.email && touched.email ? '#F43F5E' : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type=\"string\"\n                  name=\"email\"\n                  placeholder=\"Email\"\n                  value={values.email}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                {errors.email && touched.email && values.email && (\n                  <ErrorIcon\n                    onClick={() => {\n                      resetForm({ values: { ...values, email: '' } });\n                    }}\n                  >\n                    <CloseOutlinedIcon />\n                  </ErrorIcon>\n                )}\n              </RegisterFormEmailInputContainer>\n\n              {errors.email && touched.email && (\n                <ErrorMessage name=\"email\">{errors.email}</ErrorMessage>\n              )}\n            </RegisterFormEmailContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.password && touched.password}\n              secure={isPasswordValid}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.password && touched.password}\n                secure={isPasswordValid}\n                style={{\n                  borderColor:\n                    errors.password && touched.password\n                      ? '#F43F5E'\n                      : isPasswordValid\n                      ? '#00C3AD'\n                      : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type={showPassword ? 'text' : 'password'}\n                  name=\"password\"\n                  placeholder=\"Password\"\n                  value={values.password}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={togglePasswordVisibility}\n                    error={errors.password && touched.password}\n                    secure={isPasswordValid}\n                  >\n                    {showPassword ? (\n                      <RemoveRedEyeOutlinedIcon />\n                    ) : (\n                      <VisibilityOffOutlinedIcon />\n                    )}\n                  </EyeIcon>\n                  {isPasswordValid && (\n                    <CheckMarkIcon>\n                      <CheckOutlinedIcon />\n                    </CheckMarkIcon>\n                  )}\n                  {errors.password && touched.password && values.password && (\n                    <ErrorIcon\n                      onClick={() => {\n                        resetForm({ values: { ...values, password: '' } });\n                      }}\n                    >\n                      <CloseOutlinedIcon />\n                    </ErrorIcon>\n                  )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.password && touched.password && (\n                <ErrorMessage>{errors.password}</ErrorMessage>\n              )}\n              {isPasswordValid && (\n                <InfoMessage valid={isPasswordValid}>\n                  Password is secure\n                </InfoMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            <RegisterFormPasswordContainer\n              error={errors.confirmPassword && touched.confirmPassword}\n            >\n              <RegisterFormPasswordInputContainer\n                error={errors.confirmPassword && touched.confirmPassword}\n                style={{\n                  borderColor:\n                    errors.confirmPassword && touched.confirmPassword\n                      ? '#F43F5E'\n                      : '#54ADFF',\n                }}\n              >\n                <RegisterFormInput\n                  type={showConfirmPassword ? 'text' : 'password'}\n                  name=\"confirmPassword\"\n                  placeholder=\"Confirm password\"\n                  value={values.confirmPassword}\n                  onChange={handleFieldChange}\n                  onBlur={handleBlur}\n                  disabled={loading}\n                />\n                <PasswordIcon>\n                  <EyeIcon\n                    onClick={toggleConfirmPasswordVisibility}\n                    error={errors.confirmPassword && touched.confirmPassword}\n                  >\n                    {showConfirmPassword ? (\n                      <RemoveRedEyeOutlinedIcon />\n                    ) : (\n                      <VisibilityOffOutlinedIcon />\n                    )}\n                  </EyeIcon>\n                  {errors.confirmPassword &&\n                    touched.confirmPassword &&\n                    values.confirmPassword && (\n                      <ErrorIcon\n                        onClick={() => {\n                          resetForm({\n                            values: { ...values, confirmPassword: '' },\n                          });\n                        }}\n                      >\n                        <CloseOutlinedIcon />\n                      </ErrorIcon>\n                    )}\n                </PasswordIcon>\n              </RegisterFormPasswordInputContainer>\n\n              {errors.confirmPassword && touched.confirmPassword && (\n                <ErrorMessage>{errors.confirmPassword}</ErrorMessage>\n              )}\n            </RegisterFormPasswordContainer>\n\n            {!emailAvailable && (\n              <RegisterErrorMessage>\n                This email is already in use. Please, try with another email or\n                log in!\n              </RegisterErrorMessage>\n            )}\n\n            <RegisterBtn type=\"submit\" disabled={isSubmitting}>\n              Registration\n            </RegisterBtn>\n            <LoginText>\n              Already have an account?\n              <LoginLink to={'/login'}>Log In</LoginLink>\n            </LoginText>\n          </RegisterFormEl>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default RegisterForm;\n","import styled from '@emotion/styled';\n\nexport const RegisterPageWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  padding-top: 80px;\n  background-repeat: no-repeat;\n  background-size: contain;\n  \n\n  @media screen and (max-width: 767px) {\n    padding-top: 44px;\n   \n    }\n  }\n`;\n\nexport const RegisterFormWrapper = styled.div`\n  padding: 60px 75px;\n  width: 608px;\n  height: fit-content;\n  background: #ffffff;\n  box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n  border-radius: 40px;\n\n  @media screen and (max-width: 767px) {\n    margin: 0 auto;\n    padding: 40px 12px;\n    max-width: 280px;\n\n    box-shadow: 3px 8px 14px rgba(136, 198, 253, 0.19);\n    border-radius: 20px;\n  }\n`;\n","import { useEffect } from 'react';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport {\n  RegisterPageWrapper,\n  RegisterFormWrapper,\n} from './RegisterPage.styled';\n\nconst RegisterPage = () => {\n  useEffect(() => {\n    document.body.classList.add('no-scroll');\n\n    return () => document.body.classList.remove('no-scroll');\n  }, []);\n\n  return (\n    <RegisterPageWrapper>\n      <RegisterFormWrapper>\n        <RegisterForm />\n      </RegisterFormWrapper>\n    </RegisterPageWrapper>\n  );\n};\n\nexport default RegisterPage;\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M9 16.17 4.83 12l-1.42 1.41L9 19 21 7l-1.41-1.41L9 16.17z\"\n}), 'CheckOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M19 6.41 17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12 19 6.41z\"\n}), 'CloseOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6.5c3.79 0 7.17 2.13 8.82 5.5-1.65 3.37-5.02 5.5-8.82 5.5S4.83 15.37 3.18 12C4.83 8.63 8.21 6.5 12 6.5m0-2C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zm0 5c1.38 0 2.5 1.12 2.5 2.5s-1.12 2.5-2.5 2.5-2.5-1.12-2.5-2.5 1.12-2.5 2.5-2.5m0-2c-2.48 0-4.5 2.02-4.5 4.5s2.02 4.5 4.5 4.5 4.5-2.02 4.5-4.5-2.02-4.5-4.5-4.5z\"\n}), 'RemoveRedEyeOutlined');\nexports.default = _default;","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M12 6c3.79 0 7.17 2.13 8.82 5.5-.59 1.22-1.42 2.27-2.41 3.12l1.41 1.41c1.39-1.23 2.49-2.77 3.18-4.53C21.27 7.11 17 4 12 4c-1.27 0-2.49.2-3.64.57l1.65 1.65C10.66 6.09 11.32 6 12 6zm-1.07 1.14L13 9.21c.57.25 1.03.71 1.28 1.28l2.07 2.07c.08-.34.14-.7.14-1.07C16.5 9.01 14.48 7 12 7c-.37 0-.72.05-1.07.14zM2.01 3.87l2.68 2.68C3.06 7.83 1.77 9.53 1 11.5 2.73 15.89 7 19 12 19c1.52 0 2.98-.29 4.32-.82l3.42 3.42 1.41-1.41L3.42 2.45 2.01 3.87zm7.5 7.5 2.61 2.61c-.04.01-.08.02-.12.02-1.38 0-2.5-1.12-2.5-2.5 0-.05.01-.08.01-.13zm-3.4-3.4 1.75 1.75c-.23.55-.36 1.15-.36 1.78 0 2.48 2.02 4.5 4.5 4.5.63 0 1.23-.13 1.77-.36l.98.98c-.88.24-1.8.38-2.75.38-3.79 0-7.17-2.13-8.82-5.5.7-1.43 1.72-2.61 2.93-3.53z\"\n}), 'VisibilityOffOutlined');\nexports.default = _default;"],"names":["RegisterFormEl","styled","RegisterFormTitle","theme","colors","black","RegisterFormUsernameContainer","error","RegisterFormUsernameInputContainer","red","blue","RegisterFormEmailContainer","RegisterFormEmailInputContainer","RegisterFormInput","Field","ErrorIcon","ErrorMessage","RegisterFormPasswordContainer","secure","RegisterFormPasswordInputContainer","green","PasswordIcon","EyeIcon","CheckMarkIcon","InfoMessage","RegisterErrorMessage","RegisterBtn","LoginText","grey","LoginLink","Link","initialValues","username","email","password","confirmPassword","fieldValidation","values","errors","test","length","dispatch","useDispatch","useState","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","loading","setLoading","emailAvailable","setEmailAvailable","togglePasswordVisibility","prevState","toggleConfirmPasswordVisibility","handleSubmit","setSubmitting","resetForm","localStorage","setItem","credentials","name","register","login","console","validate","validateOnChange","onSubmit","setErrors","touched","handleChange","handleBlur","isSubmitting","isPasswordValid","handleFieldChange","e","target","style","borderColor","type","placeholder","value","onChange","onBlur","disabled","onClick","CloseOutlined","RemoveRedEyeOutlined","VisibilityOffOutlined","CheckOutlined","valid","to","RegisterPageWrapper","RegisterFormWrapper","useEffect","document","body","classList","add","remove","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}